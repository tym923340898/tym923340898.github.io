<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>To be.</title>
  
  <subtitle>没有明天</subtitle>
  <link href="/tym923340898.github.io/atom.xml" rel="self"/>
  
  <link href="http://tymgo.top/"/>
  <updated>2019-08-05T03:38:23.603Z</updated>
  <id>http://tymgo.top/</id>
  
  <author>
    <name>汤一鸣</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python3基于百度开放平台和图灵机器人的语音助手</title>
    <link href="http://tymgo.top/2019/07/02/python3%E5%9F%BA%E4%BA%8E%E7%99%BE%E5%BA%A6%E5%BC%80%E6%94%BE%E5%B9%B3%E5%8F%B0%E5%92%8C%E5%9B%BE%E7%81%B5%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%AF%AD%E9%9F%B3%E5%8A%A9%E6%89%8B/"/>
    <id>http://tymgo.top/2019/07/02/python3基于百度开放平台和图灵机器人的语音助手/</id>
    <published>2019-07-02T09:03:00.000Z</published>
    <updated>2019-08-05T03:38:23.603Z</updated>
    
    <content type="html"><![CDATA[<p>简介：刚刚接触python，作为一个小白，想搞一个方便自己日常生活的助手，功能肯定不多，但是满足我的基本要求。</p><a id="more"></a><p>（我用的是pycharm）<br><strong>本demo可以实现的功能：</strong></p><ul><li>图灵机器人的聊天答复</li><li>语音控制打开应用程序</li><li>语音控制音量，静音，播放/暂停，关机等等</li></ul><h2 id="程序流程"><a href="#程序流程" class="headerlink" title="程序流程"></a>程序流程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[录音]  --&gt; B[百度语音识别] </span><br><span class="line">D --无对应指令--&gt; C[图灵机器人]</span><br><span class="line">B --&gt; D[遍历本地对应指令]</span><br><span class="line">D--有对应指令--&gt;F[执行本地指令]</span><br><span class="line">C--&gt;E[百度语音合成]</span><br><span class="line">F--&gt;E</span><br><span class="line">E--&gt;G[播放语音]</span><br></pre></td></tr></table></figure><h2 id="本demo运行需要的模块："><a href="#本demo运行需要的模块：" class="headerlink" title="本demo运行需要的模块："></a>本demo运行需要的模块：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pyaudio</span><br><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> speech_recognition <span class="keyword">as</span> sr</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> playsound <span class="keyword">import</span> playsound</span><br></pre></td></tr></table></figure><h2 id="接口设置"><a href="#接口设置" class="headerlink" title="接口设置"></a>接口设置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 百度api接口设置</span></span><br><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipSpeech</span><br><span class="line"><span class="string">""" 你的 APPID AK SK """</span></span><br><span class="line">APP_ID = <span class="string">'*****'</span></span><br><span class="line">API_KEY = <span class="string">'**********'</span></span><br><span class="line">SECRET_KEY = <span class="string">'***********'</span></span><br><span class="line">client = AipSpeech(APP_ID, API_KEY, SECRET_KEY)</span><br><span class="line"><span class="comment"># 图灵接口api</span></span><br><span class="line">TURING_KEY = <span class="string">"******************"</span></span><br><span class="line">URL = <span class="string">"http://openapi.tuling123.com/openapi/api/v2"</span></span><br><span class="line">HEADERS = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=UTF-8'</span>&#125;</span><br></pre></td></tr></table></figure><p>分别注册百度开放平台和图灵机器人，并且申请端口，获得appid替换代码中的<code>******</code><br>此处无需多说，参考<a href="https://ai.baidu.com/docs#/ASR-Online-Python-SDK/top" target="_blank" rel="noopener">百度</a>和图灵的官方文档即可</p><h2 id="pyaudio录音"><a href="#pyaudio录音" class="headerlink" title="pyaudio录音"></a>pyaudio录音</h2><p>这里是有坑的，<strong>pyaudio</strong>无法直接用<strong>pip</strong>或者<strong>pycharm</strong>工具安装，而且<strong>pyaudio</strong>的安装需要运行库<strong>portaudio</strong>来支持，接下来说说安装办法</p><ul><li><strong>pyaudio</strong><br>从官网下载<a href="https://pypi.org/project/PyAudio/#files" target="_blank" rel="noopener">pyaudio</a>对应的版本，下载好之后打开cmd进入文件所在目录，键入<code>pip install ’你下载的文件名‘</code> </li><li><strong>portaudio</strong><br>这里参考<a href="https://blog.csdn.net/yanmy2012/article/details/8090287" target="_blank" rel="noopener">portaudioV19库安装</a><br>由于我不会，也嫌麻烦，所以直接下载了别人编译好的文件</li><li><strong>SpeechRecogintion</strong><br>SpeechRecogintion 是 Python 的一个语音识别框架，它可以检测语音中的停顿自动终止录音并保存，<br>直接用<code>pip install SpeechRecogintion</code>安装即可</li></ul><p>录音部分代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyaudio</span><br><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> speech_recognition <span class="keyword">as</span> sr</span><br><span class="line"><span class="comment"># pyaudio 录音</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rec</span><span class="params">(rate=<span class="number">16000</span>)</span>:</span></span><br><span class="line">    r = sr.Recognizer()</span><br><span class="line">    <span class="keyword">with</span> sr.Microphone(sample_rate=rate) <span class="keyword">as</span> source:</span><br><span class="line">        audio = r.listen(source)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"recording.wav"</span>, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(audio.get_wav_data())</span><br></pre></td></tr></table></figure><h2 id="百度语音识别"><a href="#百度语音识别" class="headerlink" title="百度语音识别"></a>百度语音识别</h2><p>参考<a href="https://ai.baidu.com/docs#/ASR-Online-Python-SDK/top" target="_blank" rel="noopener">百度官方文档</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 百度请求音频</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listen</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'recording.wav'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        audio_data = f.read()</span><br><span class="line">    result = client.asr(audio_data, <span class="string">'wav'</span>, <span class="number">16000</span>, &#123;</span><br><span class="line">        <span class="string">'dev_pid'</span>: <span class="number">1536</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    x = result[<span class="string">"err_no"</span>]</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">0</span>:</span><br><span class="line">        result_text = result[<span class="string">"result"</span>][<span class="number">0</span>]</span><br><span class="line">        print(<span class="string">"#"</span> + result_text)</span><br><span class="line">        <span class="keyword">return</span> result_text</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        run()</span><br></pre></td></tr></table></figure><p><strong>这里遇到了一个问题</strong>，由于这一些列的程序一直处于循环里，如果你运行了程序，他会不停的把录音请求到百度那里，你总不能一直和录音机一直说话，所以，当你发送的录音为空，或者识别不出来的话，百度会返回你一个<code>err_no：!= 0</code>的值，并且不会返回<code>&quot;result&quot;</code>的值，导致程序出错，而正常识别的返回值是<code>err_no: 0</code>所以,我们设置条件，如果<code>err_no: 0</code> 则正常运行下面的程序，否则重新录音。<br>（ps，更好的解决办法应该是录音麦克收到高分贝信息的时候开始录音，我知道有这个处理办法，但是我没有找到具体方法）</p><h2 id="图灵聊天机器人"><a href="#图灵聊天机器人" class="headerlink" title="图灵聊天机器人"></a>图灵聊天机器人</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图灵聊天</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">robot</span><span class="params">(text=<span class="string">""</span>)</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"reqType"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"perception"</span>: &#123;</span><br><span class="line">            <span class="string">"inputText"</span>: &#123;</span><br><span class="line">                <span class="string">"text"</span>: <span class="string">""</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"selfInfo"</span>: &#123;</span><br><span class="line">                <span class="string">"location"</span>: &#123;</span><br><span class="line">                    <span class="string">"city"</span>: <span class="string">"哈尔滨"</span>,</span><br><span class="line">                    <span class="string">"street"</span>: <span class="string">"红旗大街"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"userInfo"</span>: &#123;</span><br><span class="line">            <span class="string">"apiKey"</span>: TURING_KEY,</span><br><span class="line">            <span class="string">"userId"</span>: <span class="string">"starky"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    data[<span class="string">"perception"</span>][<span class="string">"inputText"</span>][<span class="string">"text"</span>] = text</span><br><span class="line">    response = requests.request(<span class="string">"post"</span>, URL, json=data, headers=HEADERS)</span><br><span class="line">    response_dict = json.loads(response.text)</span><br><span class="line">    result = response_dict[<span class="string">"results"</span>][<span class="number">0</span>][<span class="string">"values"</span>][<span class="string">"text"</span>]</span><br><span class="line">    print(<span class="string">"AI: "</span> + result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h2 id="百度语音合成"><a href="#百度语音合成" class="headerlink" title="百度语音合成"></a>百度语音合成</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 百度TTS</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">speak</span><span class="params">(text=<span class="string">""</span>)</span>:</span></span><br><span class="line">    result = client.synthesis(text, <span class="string">'zh'</span>, <span class="number">1</span>, &#123;</span><br><span class="line">        <span class="string">'spd'</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">'vol'</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">'per'</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="string">'pit'</span>: <span class="number">5</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">#把接收到的二进制数据流输入到MP3文件中</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isinstance(result, dict):</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'audio.mp3'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(result)</span><br></pre></td></tr></table></figure><p>这里附上官方给的语音设置（我当然用的萝莉音—_—）<br>参数  |    描述<br>–|–<br>spd  | 语速，取值0-9，默认为5中语速<br>pit   |音调，取值0-9，默认为5中语调<br>vol| 音量，取值0-15，默认为5中音量<br>per|发音人选择, 0为女声，1为男声，3为情感合成-度逍遥，4为情感合成-度丫丫，默认为普通女</p><h2 id="播放接收到的音频"><a href="#播放接收到的音频" class="headerlink" title="播放接收到的音频"></a>播放接收到的音频</h2><p>这里需要一个库<a href="https://pypi.org/project/playsound/1.2.1/#files" target="_blank" rel="noopener">playsound</a>用来播放mp3文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> playsound <span class="keyword">import</span> playsound</span><br><span class="line"><span class="comment"># 播放接收百度返回音频</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">()</span>:</span></span><br><span class="line">    playsound(<span class="string">'audio.mp3'</span>)</span><br><span class="line"><span class="comment">#删除</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dele</span><span class="params">()</span>:</span></span><br><span class="line">    os.remove(<span class="string">'audio.mp3'</span>)</span><br></pre></td></tr></table></figure><h2 id="运行本地指令"><a href="#运行本地指令" class="headerlink" title="运行本地指令"></a>运行本地指令</h2><p>用command的方法运行，我把这个方法直接写到了运行整段代码的方法里面，结合我的程序流程来看，如果识别出来的文字能在我设置好的命令库里面匹配出来，那么优先运行命令，跳过图灵聊天机器人的过程。<br><strong>像播放/暂停/静音….这些指令是通过运行vbs文件执行的，每个指令有一个”虚拟键值“，</strong></p><p>例如静音的写法：</p><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Set</span> Ws = <span class="built_in">CreateObject</span>(<span class="string">"Wscript.Shell"</span>)</span><br><span class="line">Ws.Sendkeys <span class="string">"棴"</span></span><br></pre></td></tr></table></figure><p>保存为vbs文件 这个值<code>&quot;棴&quot;</code>就是代表不同的指令，去网上找找有更多的指令可以使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        rec()</span><br><span class="line">        phrase = listen()</span><br><span class="line">        <span class="keyword">if</span> phrase <span class="keyword">in</span> command1.keys():</span><br><span class="line">            os.system(command1[phrase])</span><br><span class="line">            speak(text=<span class="string">'为您%s'</span> %phrase)</span><br><span class="line">            play()</span><br><span class="line">            print(<span class="string">'为您%s'</span> %phrase)</span><br><span class="line">            dele()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            request = phrase</span><br><span class="line">            response = robot(request)</span><br><span class="line">            speak(response)</span><br><span class="line">            play()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行程序目录</span></span><br><span class="line">command1 = &#123;<span class="string">'关机'</span>: <span class="string">'shutdown -s -t 1'</span>,</span><br><span class="line">             <span class="string">'重启'</span>: <span class="string">'shutdown -r'</span>,</span><br><span class="line">             <span class="string">'打开网易云音乐'</span>: <span class="string">'start cloudmusic.exe'</span>,</span><br><span class="line">             <span class="string">'播放音乐'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\播放暂停.vbs'</span>,</span><br><span class="line">             <span class="string">'停止播放'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\播放暂停.vbs'</span>,</span><br><span class="line">             <span class="string">'静音'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\静音.vbs'</span>,</span><br><span class="line">             <span class="string">'上一首'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\上一首.vbs'</span>,</span><br><span class="line">             <span class="string">'下一首'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\下一首.vbs'</span>,</span><br><span class="line">             <span class="string">'减小音量'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\减小音量.vbs'</span>,</span><br><span class="line">             <span class="string">'增大音量'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\增大音量.vbs'</span>,</span><br><span class="line">             <span class="string">'打开微信'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\微信.lnk'</span>,</span><br><span class="line">             <span class="string">'打开ps'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\Photoshop.lnk'</span>,</span><br><span class="line">             <span class="string">'打开pr'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\AdobePremierePro.lnk'</span>,</span><br><span class="line">             <span class="string">'打开浏览器'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\MicrosoftEdge.lnk'</span>,</span><br><span class="line"></span><br><span class="line">              &#125;</span><br></pre></td></tr></table></figure><p>最后执行run（）方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run（）</span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>大合影</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pyaudio</span><br><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> speech_recognition <span class="keyword">as</span> sr</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> playsound <span class="keyword">import</span> playsound</span><br><span class="line"></span><br><span class="line"><span class="comment"># 百度api接口设置</span></span><br><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipSpeech</span><br><span class="line"><span class="string">""" 你的 APPID AK SK """</span></span><br><span class="line">APP_ID = <span class="string">'16690797'</span></span><br><span class="line">API_KEY = <span class="string">'E3M2RW8IOsixXpKVjNBMgxyE'</span></span><br><span class="line">SECRET_KEY = <span class="string">'chnwOnAoyPNRWwiafcACpTnEYKZgzvLq'</span></span><br><span class="line">client = AipSpeech(APP_ID, API_KEY, SECRET_KEY)</span><br><span class="line"><span class="comment"># 图灵接口api</span></span><br><span class="line">TURING_KEY = <span class="string">"9a8deb05f6b14ef38d87f4c638e387aa"</span></span><br><span class="line">URL = <span class="string">"http://openapi.tuling123.com/openapi/api/v2"</span></span><br><span class="line">HEADERS = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=UTF-8'</span>&#125;</span><br><span class="line"><span class="comment"># pyaudio 录音</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rec</span><span class="params">(rate=<span class="number">16000</span>)</span>:</span></span><br><span class="line">    r = sr.Recognizer()</span><br><span class="line">    <span class="keyword">with</span> sr.Microphone(sample_rate=rate) <span class="keyword">as</span> source:</span><br><span class="line">        audio = r.listen(source)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"recording.wav"</span>, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(audio.get_wav_data())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 百度请求音频</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listen</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'recording.wav'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        audio_data = f.read()</span><br><span class="line">    result = client.asr(audio_data, <span class="string">'wav'</span>, <span class="number">16000</span>, &#123;</span><br><span class="line">        <span class="string">'dev_pid'</span>: <span class="number">1536</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    x = result[<span class="string">"err_no"</span>]</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">0</span>:</span><br><span class="line">        result_text = result[<span class="string">"result"</span>][<span class="number">0</span>]</span><br><span class="line">        print(<span class="string">"#"</span> + result_text)</span><br><span class="line">        <span class="keyword">return</span> result_text</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        run()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 图灵聊天</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">robot</span><span class="params">(text=<span class="string">""</span>)</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"reqType"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"perception"</span>: &#123;</span><br><span class="line">            <span class="string">"inputText"</span>: &#123;</span><br><span class="line">                <span class="string">"text"</span>: <span class="string">""</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"selfInfo"</span>: &#123;</span><br><span class="line">                <span class="string">"location"</span>: &#123;</span><br><span class="line">                    <span class="string">"city"</span>: <span class="string">"哈尔滨"</span>,</span><br><span class="line">                    <span class="string">"street"</span>: <span class="string">"红旗大街"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"userInfo"</span>: &#123;</span><br><span class="line">            <span class="string">"apiKey"</span>: TURING_KEY,</span><br><span class="line">            <span class="string">"userId"</span>: <span class="string">"starky"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    data[<span class="string">"perception"</span>][<span class="string">"inputText"</span>][<span class="string">"text"</span>] = text</span><br><span class="line">    response = requests.request(<span class="string">"post"</span>, URL, json=data, headers=HEADERS)</span><br><span class="line">    response_dict = json.loads(response.text)</span><br><span class="line">    result = response_dict[<span class="string">"results"</span>][<span class="number">0</span>][<span class="string">"values"</span>][<span class="string">"text"</span>]</span><br><span class="line">    print(<span class="string">"AI: "</span> + result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="comment"># 百度TTS</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">speak</span><span class="params">(text=<span class="string">""</span>)</span>:</span></span><br><span class="line">    result = client.synthesis(text, <span class="string">'zh'</span>, <span class="number">1</span>, &#123;</span><br><span class="line">        <span class="string">'spd'</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">'vol'</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">'per'</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="string">'pit'</span>: <span class="number">5</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isinstance(result, dict):</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'audio.mp3'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(result)</span><br><span class="line"><span class="comment"># 播放接收百度返回音频</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">()</span>:</span></span><br><span class="line">    playsound(<span class="string">'audio.mp3'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dele</span><span class="params">()</span>:</span></span><br><span class="line">    os.remove(<span class="string">'audio.mp3'</span>)</span><br><span class="line"><span class="comment"># 运行程序目录</span></span><br><span class="line">command1 = &#123;<span class="string">'关机'</span>: <span class="string">'shutdown -s -t 1'</span>,</span><br><span class="line">             <span class="string">'重启'</span>: <span class="string">'shutdown -r'</span>,</span><br><span class="line">             <span class="string">'打开网易云音乐'</span>: <span class="string">'start cloudmusic.exe'</span>,</span><br><span class="line">             <span class="string">'播放音乐'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\播放暂停.vbs'</span>,</span><br><span class="line">             <span class="string">'停止播放'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\播放暂停.vbs'</span>,</span><br><span class="line">             <span class="string">'静音'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\静音.vbs'</span>,</span><br><span class="line">             <span class="string">'上一首'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\上一首.vbs'</span>,</span><br><span class="line">             <span class="string">'下一首'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\下一首.vbs'</span>,</span><br><span class="line">             <span class="string">'减小音量'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\减小音量.vbs'</span>,</span><br><span class="line">             <span class="string">'增大音量'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\增大音量.vbs'</span>,</span><br><span class="line">             <span class="string">'打开微信'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\微信.lnk'</span>,</span><br><span class="line">             <span class="string">'打开ps'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\Photoshop.lnk'</span>,</span><br><span class="line">             <span class="string">'打开pr'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\AdobePremierePro.lnk'</span>,</span><br><span class="line">             <span class="string">'打开浏览器'</span>:<span class="string">'C:\\Users\\Administrator\\PycharmProjects\\untitled1\\venv\\vbs命令\\MicrosoftEdge.lnk'</span>,</span><br><span class="line"></span><br><span class="line">              &#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        rec()</span><br><span class="line">        phrase = listen()</span><br><span class="line">        <span class="keyword">if</span> phrase <span class="keyword">in</span> command1.keys():</span><br><span class="line">            os.system(command1[phrase])</span><br><span class="line">            speak(text=<span class="string">'为您%s'</span> %phrase)</span><br><span class="line">            play()</span><br><span class="line">            print(<span class="string">'为您%s'</span> %phrase)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            request = phrase</span><br><span class="line">            response = robot(request)</span><br><span class="line">            speak(response)</span><br><span class="line">            play()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">run()</span><br></pre></td></tr></table></figure><p>我觉得不管我写的怎么样，我把它记录下来，在这个开源的时代，我很乐意和大家一起讨论</p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://www.kancloud.cn/turing/www-tuling123-com/718218" target="_blank" rel="noopener">图灵机器人</a><br><a href="http://people.csail.mit.edu/hubert/pyaudio/" target="_blank" rel="noopener">pyaudio</a><br><a href="https://ai.baidu.com/docs#/TTS-Online-Python-SDK/top" target="_blank" rel="noopener">百度云AI</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简介：刚刚接触python，作为一个小白，想搞一个方便自己日常生活的助手，功能肯定不多，但是满足我的基本要求。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://tymgo.top/categories/python/"/>
    
    
      <category term="语音助手" scheme="http://tymgo.top/tags/%E8%AF%AD%E9%9F%B3%E5%8A%A9%E6%89%8B/"/>
    
      <category term="小想法" scheme="http://tymgo.top/tags/%E5%B0%8F%E6%83%B3%E6%B3%95/"/>
    
      <category term="python" scheme="http://tymgo.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记——易错细节</title>
    <link href="http://tymgo.top/2018/08/02/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E6%98%93%E9%94%99%E7%BB%86%E8%8A%82/"/>
    <id>http://tymgo.top/2018/08/02/java学习笔记——易错细节/</id>
    <published>2018-08-02T09:03:00.000Z</published>
    <updated>2019-08-05T03:38:37.911Z</updated>
    
    <content type="html"><![CDATA[<p>java学习笔记</p><a id="more"></a><h1 id="Java学习笔记（易错细节）"><a href="#Java学习笔记（易错细节）" class="headerlink" title="Java学习笔记（易错细节）"></a><strong>Java</strong>学习笔记（易错细节）</h1><h2 id="逻辑运算符（-amp-单个双个区别）"><a href="#逻辑运算符（-amp-单个双个区别）" class="headerlink" title="逻辑运算符（&amp;|单个双个区别）"></a>逻辑运算符（&amp;|单个双个区别）</h2><table><thead><tr><th>逻辑运算符</th><th align="center">描述</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td align="center">一旦运算除左端为false,那么右端就不运算了</td></tr><tr><td>&amp;</td><td align="center">运算两端都是true,结果才是true,那么只要有任意一端false,结果为false</td></tr><tr><td>&#124;&#124;</td><td align="center">一旦运算左端为true,结果就为true,都断不用计算</td></tr><tr><td>&#124;</td><td align="center">运算两端任意一段为true,结果为true,只有两端都为false,结果为false</td></tr></tbody></table><h2 id="自增自减区分"><a href="#自增自减区分" class="headerlink" title="自增自减区分"></a>自增自减区分</h2><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">+</span><span class="literal">+</span><span class="comment">x</span></span><br></pre></td></tr></table></figure><p>先自增再赋值</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">x</span><span class="literal">+</span><span class="literal">+</span></span><br></pre></td></tr></table></figure><p>本身有值，值为上一次x的值（先赋值，再自增）</p><ul><li>例如：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x=<span class="number">1</span>;</span><br><span class="line">x=x++;</span><br><span class="line">System.out.println(x);</span><br></pre></td></tr></table></figure></li></ul><p>输出结果为 1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x=<span class="number">1</span>;</span><br><span class="line">x=++x;</span><br><span class="line">System.out.println(x);</span><br></pre></td></tr></table></figure><p>输出结果为 2</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;java学习笔记&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://tymgo.top/categories/Java/"/>
    
      <category term="学习笔记" scheme="http://tymgo.top/categories/Java/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="http://tymgo.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="http://tymgo.top/tags/Java/"/>
    
  </entry>
  
</feed>
